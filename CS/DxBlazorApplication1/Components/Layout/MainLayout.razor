@inherits LayoutComponentBase
@inject NavigationManager NavigationManager

<div class="page">
    <Drawer DrawerHeader="drawerHeader" DrawerFooter="drawerFooter">
        <DrawerBody>
            <div class="w-100">
                <NavMenu ItemClick="OnItemClick"></NavMenu>
            </div>
        </DrawerBody>
        <DrawerTarget>
            <CascadingValue TValue="IMenuItemInfo" Name="ClickedMenuItemName" Value='ClickedMenuItemName'>
                @Body
            </CascadingValue>
        </DrawerTarget>
    </Drawer>
</div>

@code {
    public IMenuItemInfo? ClickedMenuItemName { get; set; }

    private void OnItemClick(MenuItemClickEventArgs e){
        ClickedMenuItemName = e.ItemInfo;
    }

    [SupplyParameterFromQuery(Name = UrlGenerator.ToggleSidebarName)]
    public bool ToggledSidebar { get; set; }

    private RenderFragment drawerHeader => @<div class="navigation-drawer-header">
        <img class="logo" src="images/logo.svg" alt="DevExpress logo" />
        <NavLink href="@UrlGenerator.GetUrl(new Uri(NavigationManager.Uri).LocalPath, !ToggledSidebar)">
            <DxButton RenderStyle="@ButtonRenderStyle.Light" RenderStyleMode="@ButtonRenderStyleMode.Text" CssClass="menu-button-nav" IconCssClass="@(ToggledSidebar ? "icon icon-close" : "icon icon-menu")"></DxButton>
        </NavLink>
    </div>;

    private RenderFragment drawerFooter => @<div>
        <NavLink href="https://docs.devexpress.com/Blazor/400725/blazor-components" class="button-link">
            <DxButton Text="Docs" RenderStyleMode="@ButtonRenderStyleMode.Text" CssClass="footer-button" RenderStyle="@ButtonRenderStyle.Light" IconCssClass="icon docs-icon"></DxButton>
        </NavLink>
        <NavLink href="https://demos.devexpress.com/blazor/" class="button-link">
            <DxButton Text="Demos" RenderStyleMode="@ButtonRenderStyleMode.Text" CssClass="footer-button" RenderStyle="@ButtonRenderStyle.Light" IconCssClass="icon demos-icon"></DxButton>
        </NavLink>
    </div>;

 
}